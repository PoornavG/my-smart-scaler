apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  # This is the configuration file for Prometheus
  prometheus.yml: |
    global:
      scrape_interval: 15s # Scrape targets every 15 seconds

    scrape_configs:
      # This job tells Prometheus to find our OTel collector
      - job_name: 'otel-collector'
        static_configs:
          - targets: ['otel-collector:8889'] # The service:port we created
---
# These are the permissions Prometheus needs to talk to the
# Kubernetes API to discover other pods and services.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["get"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus # Use the permissions we created
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.retention.time=12h" # Keep data for 12h to save memory
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  type: ClusterIP # We don't need this on the public internet
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app: prometheus
